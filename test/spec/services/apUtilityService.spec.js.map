{"version":3,"sources":["spec/services/apUtilityService.spec.ts"],"names":["ap","someBigTask"],"mappings":"AAAA,sDAAsD;AAEtD,IAAO,EAAE,CAyMR;AAzMD,WAAO,EAAE,EAAC,CAAC;IACPA,YAAYA,CAACA;IAGbA,QAAQA,CAACA,2BAA2BA,EAAEA;QAElC,IAAI,OAAuB,EACvB,SAAoB,EACpB,UAAU,CAAC;QACf,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;QAEnC,UAAU,CAAC,MAAM,CAAC,UAAS,kBAAkB,EAAE,WAAW,EAAE,YAAY;YACpE,OAAO,GAAG,kBAAkB,CAAC;YAC7B,SAAS,GAAG,WAAW,CAAC;YACxB,UAAU,GAAG,YAAY,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC;QAEJ,QAAQ,CAAC,UAAU,EAAE;YACjB,EAAE,CAAC,qCAAqC,EAAE;gBACtC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,wCAAwC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1E,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,8BAA8B,EAAE;gBAC/B,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,4CAA4C,EAAE;gBAC7C,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,sCAAsC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxE,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,aAAa,EAAE;YACpB,EAAE,CAAC,qCAAqC,EAAE;gBACtC,IAAI,SAAS,CAAC;gBACd,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,mCAAmC,EAAE;gBACpC,IAAI,SAAS,GAAG,CAAC,CAAC;gBAClB,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,+BAA+B,EAAE;gBAChC,IAAI,SAAS,GAAG,IAAI,CAAC;gBACrB,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,aAAa,EAAE;YACpB,EAAE,CAAC,4CAA4C,EAAE;gBAC7C,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,oDAAoD,EAAE;gBACrD,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,0DAA0D,EAAE;gBAC3D,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,UAAU,EAAE;YACjB,EAAE,CAAC,wBAAwB,EAAE;gBACzB,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,iBAAiB,EAAE;YACxB,EAAE,CAAC,uDAAuD,EAAE;gBACxD,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5B,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAC1B,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,gCAAgC,EAAE;gBACjC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5B,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/B,AACA,8DAD8D;gBAC9D,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,0CAA0C,EAAE;gBAC3C,IAAI,KAAK,EACL,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,wCAAwC,EAAE;gBACzC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5B,GAAG,CAAC;gBACR,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,wBAAwB,EAAE;YAC/B,AACA,iDADiD;gBAC7C,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,UAAS,CAAC,IAAI,MAAM,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAClD,MAAM,GAAG,EAAE,EACX,UAAU,GAAG,CAAC,CAAC;YAEnB,qBAAqB,MAAM,EAAE,KAAK,EAAE,UAAU;gBAC1CC,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,eAAeA,CAACA,EAAEA,EAAEA,EAAEA,MAAMA,EAAEA,CAACA,CAACA,CAACA;gBACvDA,EAAEA,CAACA,CAACA,UAAUA,GAAGA,UAAUA,CAACA,CAACA,CAACA;oBAC1BA,UAAUA,GAAGA,UAAUA,CAACA;gBAC5BA,CAACA;YACLA,CAACA;YAED,SAAS,CAAC;gBACN,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sDAAsD,EAAE;gBACvD,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;qBACtD,IAAI,CAAC,UAAS,WAAW;oBACtB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACpC,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACP,UAAU,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,4DAA4D;YAC5D,yFAAyF;YACzF,yEAAyE;YACzE,wCAAwC;YACxC,4CAA4C;YAC5C,aAAa;YACb,2BAA2B;YAC3B,KAAK;QACT,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,oBAAoB,EAAE;YAE3B,EAAE,CAAC,gEAAgE,EAAE;gBACjE,AACA,kBADkB;oBACd,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;gBACnE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,aAAa,EAAE,cAAc;oBAC9C,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,+CAA+C,EAAE;gBAChD,AACA,0BAD0B;oBACtB,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;gBACnE,IAAI,mBAAmB,GAAG;oBACtB,cAAc;oBACd,eAAe;oBACf,iBAAiB;oBACjB,cAAc;oBACd,WAAW;oBACX,cAAc;oBACd,gBAAgB;oBAChB,gBAAgB;oBAChB,aAAa;oBACb,eAAe;iBAClB,CAAC;gBACF,AACA,6BAD6B;gBAC7B,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7C,AACA,+BAD+B;gBAC/B,CAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,cAAc;oBACvC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAA;YAEN,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,+CAA+C,EAAE;gBAChD,AACA,gHADgH;oBAC5G,WAAW,GAAG,OAAO,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;gBACnE,AACA,8BAD8B;gBAC9B,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7C,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5C,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7C,AACA,4BAD4B;gBAC5B,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7C,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7C,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/C,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/C,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/C,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,mCAAmC,EAAE;YAC1C,EAAE,CAAC,mCAAmC,EAAE;gBACpC,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACvF,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,2DAA2D,EAAE;gBAC5D,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC7E,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,YAAY,EAAE;YACnB,EAAE,CAAC,qCAAqC,EAAE;gBACtC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,YAAY,EAAE;YACnB,EAAE,CAAC,uCAAuC,EAAE;gBACxC,IAAI,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;gBACvD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;YAC7F,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAGP,CAAC,CAACD,CAACA;AAEPA,CAACA,EAzMM,EAAE,KAAF,EAAE,QAyMR","file":"spec/services/apUtilityService.spec.js","sourcesContent":["/// <reference path=\"../../mock/app.module.mock.ts\" />\r\n\r\nmodule ap {\r\n    'use strict';\r\n\r\n\r\n    describe(\"Service: apUtilityService\", function() {\r\n\r\n        var service: UtilityService,\r\n            mockModel: MockModel,\r\n            $rootScope;\r\n        beforeEach(module(\"angularPoint\"));\r\n\r\n        beforeEach(inject(function(_apUtilityService_, _mockModel_, _$rootScope_) {\r\n            service = _apUtilityService_;\r\n            mockModel = _mockModel_;\r\n            $rootScope = _$rootScope_;\r\n        }));\r\n\r\n        describe('_.isGuid', function() {\r\n            it(\"Should detect when a GUID is valid.\", function() {\r\n                expect(_.isGuid('{00A69513-BB63-4333-9639-EB14C08269DB}')).toBe(true);\r\n            });\r\n            it(\"Should reject a missing GUID\", function() {\r\n                expect(_.isGuid('')).toBe(false);\r\n            });\r\n            it(\"Should detect GUID without curly brackets.\", function() {\r\n                expect(_.isGuid('00A69513-BB63-4333-9639-EB14C08269DB')).toBe(true);\r\n            })\r\n        });\r\n\r\n        describe('_.isDefined', function() {\r\n            it('returns true for an undefined value', function() {\r\n                var someValue;\r\n                expect(_.isDefined(someValue)).toBe(false);\r\n            });\r\n            it('returns false for a defined value', function() {\r\n                var someValue = 2;\r\n                expect(_.isDefined(someValue)).toBe(true);\r\n            });\r\n            it('returns true for a null value', function() {\r\n                var someValue = null;\r\n                expect(_.isDefined(someValue)).toBe(true);\r\n            });\r\n        });\r\n\r\n        describe('doubleDigit', function() {\r\n            it(\"Should add a leading 0 for a single digit.\", function() {\r\n                expect(service.doubleDigit(3)).toEqual('03');\r\n            });\r\n            it(\"Should return a 2 digit string for a double digit.\", function() {\r\n                expect(service.doubleDigit(11)).toEqual('11');\r\n            });\r\n            it(\"Should work when a number represented by string is used.\", function() {\r\n                expect(service.doubleDigit('3')).toEqual('03');\r\n            });\r\n        });\r\n\r\n        describe('yyyymmdd', function() {\r\n            it(\"Should convert a date.\", function() {\r\n                var testDate = service.yyyymmdd(new Date(2012, 0, 1));\r\n                expect(testDate).toEqual(20120101);\r\n            });\r\n        });\r\n\r\n        describe('dateWithinRange', function() {\r\n            it(\"works with a valid start and end with date in middle.\", function() {\r\n                var start = new Date(2012, 1, 1),\r\n                    end = new Date(2012, 1, 3),\r\n                    date = new Date(2012, 1, 2);\r\n                expect(service.dateWithinRange(start, end, date)).toBe(true);\r\n            });\r\n            it(\"works without a date to check.\", function() {\r\n                var start = new Date(2014, 1, 1),\r\n                    end = new Date(2014, 1, 2);\r\n                //Current date is in the future so it is not within the range.\r\n                expect(service.dateWithinRange(start, end)).toBe(false);\r\n            });\r\n            it('returns false if a start date is missing', function() {\r\n                var start,\r\n                    end = new Date(2014, 1, 2);\r\n                expect(service.dateWithinRange(start, end)).toBe(false);\r\n            });\r\n            it('returns false if a end date is missing', function() {\r\n                var start = new Date(2014, 1, 1),\r\n                    end;\r\n                expect(service.dateWithinRange(start, end)).toBe(false);\r\n            });\r\n        });\r\n\r\n        describe('Function: batchProcess', function() {\r\n            //Create simple array of integers to loop through\r\n            var entities = _.times(1000, function(n) { return n }),\r\n                output = [],\r\n                batchCount = 0;\r\n\r\n            function someBigTask(entity, index, batchIndex) {\r\n                output.push(mockModel.createEmptyItem({ id: entity }));\r\n                if (batchIndex > batchCount) {\r\n                    batchCount = batchIndex;\r\n                }\r\n            }\r\n\r\n            afterEach(function() {\r\n                output.length = 0;\r\n            });\r\n\r\n            it('resolves with the expected outcome in a single batch', function() {\r\n                service.batchProcess(entities, someBigTask, this, 25, 2000)\r\n                    .then(function(entityArray) {\r\n                        expect(output.length).toEqual(1000);\r\n                        expect(batchCount).toEqual(1);\r\n                    });\r\n                $rootScope.$digest();\r\n            });\r\n\r\n            //TODO Get this working after the first timeout is triggered\r\n            //it('splits the request into multiple batches if we exceed the max items', function () {\r\n            //    apUtilityService.batchProcess(entities, someBigTask, this, 25, 750)\r\n            //        .then(function (entityArray) {\r\n            //            expect(batchCount).toEqual(1);\r\n            //        });\r\n            //    $rootScope.$digest();\r\n            //});\r\n        });\r\n\r\n        describe('resolvePermissions', function() {\r\n\r\n            it('allows user with FullMask to have all permissions set to true.', function() {\r\n                //Full rights mask\r\n                let permissions = service.resolvePermissions('0x7FFFFFFFFFFFFFFF');\r\n                _.each(permissions, (permissionVal, permissionName) => {\r\n                    expect(permissions[permissionName]).toBe(true);\r\n                })\r\n            });\r\n            it('Should prevent read-only user from approving.', function() {\r\n                //Limited user (view only)\r\n                let permissions = service.resolvePermissions('0x0000000000000001');\r\n                let rejectedPermissions = [\r\n                    'AddListItems',\r\n                    'EditListItems',\r\n                    'DeleteListItems',\r\n                    'ApproveItems',\r\n                    'OpenItems',\r\n                    'ViewVersions',\r\n                    'DeleteVersions',\r\n                    'CancelCheckout',\r\n                    'ManageLists',\r\n                    'ViewFormPages'\r\n                ];\r\n                //Should only be able to view\r\n                expect(permissions.ViewListItems).toBe(true);\r\n                //All others should be rejected\r\n                _.each(rejectedPermissions, (permissionName) => {\r\n                    expect(permissions[permissionName]).toBe(false);\r\n                })\r\n\r\n            });\r\n            it('Should allow a user with edit rights to edit.', function() {\r\n                //0x0000000000000007 combines View (0x0000000000000001), Add (0x0000000000000002), and Edit (0x0000000000000004)\r\n                let permissions = service.resolvePermissions('0x0000000000000007');\r\n                //User can view, add, and edit\r\n                expect(permissions.ViewListItems).toBe(true);\r\n                expect(permissions.AddListItems).toBe(true);\r\n                expect(permissions.EditListItems).toBe(true);\r\n                //But can't do anything else\r\n                expect(permissions.DeleteListItems).toBe(false);\r\n                expect(permissions.ApproveItems).toBe(false);\r\n                expect(permissions.OpenItems).toBe(false);\r\n                expect(permissions.ViewVersions).toBe(false);\r\n                expect(permissions.DeleteVersions).toBe(false);\r\n                expect(permissions.CancelCheckout).toBe(false);\r\n                expect(permissions.DeleteVersions).toBe(false);\r\n                expect(permissions.ManageLists).toBe(false);\r\n                expect(permissions.ViewFormPages).toBe(false);\r\n            });\r\n        });\r\n\r\n        describe('Function convertEffectivePermMask', function() {\r\n            it('returns the mask for \\'FullMask\\'', function() {\r\n                expect(service.convertEffectivePermMask('FullMask')).toEqual('0x7FFFFFFFFFFFFFFF');\r\n            });\r\n            it('returns null when a matching permission name isn\\'t found', function() {\r\n                expect(service.convertEffectivePermMask('Some Unknown Mask')).toBeNull();\r\n            });\r\n        });\r\n\r\n        describe('toCamlCase', function() {\r\n            it(\"Convert multiple words with spaces.\", function() {\r\n                expect(service.toCamelCase('This is a test')).toEqual('thisIsATest');\r\n            });\r\n        });\r\n\r\n        describe('SplitIndex', function() {\r\n            it(\"Converts delimited string into object\", function() {\r\n                var splitObj = new service.SplitIndex('12;#TestValue');\r\n                expect(JSON.stringify(splitObj)).toEqual(JSON.stringify({ id: 12, value: 'TestValue' }));\r\n            });\r\n        });\r\n\r\n\r\n    });\r\n\r\n}"],"sourceRoot":"/source/"}