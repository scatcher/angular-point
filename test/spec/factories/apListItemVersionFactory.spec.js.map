{"version":3,"sources":["spec/factories/apListItemVersionFactory.spec.ts"],"names":["ap","ap.resetFieldVersionCollection"],"mappings":"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","file":"spec/factories/apListItemVersionFactory.spec.js","sourcesContent":["/// <reference path=\"../../mock/app.module.mock.ts\" />\nmodule ap {\n    'use strict';\n\n    var mockModel: MockModel,\n        versionHistoryCollection: VersionHistoryCollection<MockListItem>,\n        integerFieldVersionCollection: FieldVersionCollection<MockListItem>,\n        integerFieldDefinition: FieldDefinition,\n        mockUser = {lookupId: 22, lookupValue: 'Some Guy'};\n\n\n    describe('Factory: apListItemVersionFactory', function () {\n\n        beforeEach(module('angularPoint'));\n\n        beforeEach(inject(function (_mockModel_) {\n            //factory = _apListItemFactory_;\n            mockModel = _mockModel_;\n\n            integerFieldDefinition = mockModel.getFieldDefinition('integer');\n            resetFieldVersionCollection();\n        }));\n\n        describe('Class VersionHistoryCollection', function () {\n            it('allows versions to be added', function () {\n                integerFieldVersionCollection.addVersion(mockUser, new Date(2013, 9, 8), 5, 1);\n                expect(integerFieldVersionCollection.length).toEqual(1);\n                expect(integerFieldVersionCollection.versions[1]).toBeDefined();\n            });\n            it('exposes fields mapped name', function () {\n                expect(integerFieldDefinition.mappedName).toEqual('integer');\n            });\n\n        });\n\n        describe('Class VersionSummary', function () {\n\n            describe('getter hasMajorChanges', function () {\n                it('returns false when nothing changes between versions', function () {\n                    var newVersion = new mockModel.factory({integer: 3, version: 2});\n                    var oldVersion = new mockModel.factory({integer: 3, version: 1});\n                    var versionSummary = new ap.VersionSummary(newVersion, oldVersion);\n\n                    expect(versionSummary.hasMajorChanges).toBeFalsy();\n                });\n                it('returns true when nothing changes between versions', function () {\n                    var newVersion = new mockModel.factory({integer: 4, version: 2});\n                    var oldVersion = new mockModel.factory({integer: 3, version: 1});\n                    var versionSummary = new ap.VersionSummary(newVersion, oldVersion);\n\n                    expect(versionSummary.hasMajorChanges).toBeTruthy();\n                });\n            });\n\n            describe('change count', function () {\n                it('correctly identifies that 2 fields were changed', function () {\n                    var newVersion = new mockModel.factory({boolean: false, integer: 3, version: 2});\n                    var oldVersion = new mockModel.factory({boolean: true, integer: 4, version: 1});\n                    var versionSummary = new ap.VersionSummary(newVersion, oldVersion);\n\n                    expect(versionSummary.changeCount).toEqual(2);\n                });\n            });\n\n        });\n\n        describe('Class ChangeSummary', function () {\n            it('correctly determines which changes are significant', function () {\n                var changes = {\n                    /** Significant because it's the first */\n                    1: new mockModel.factory({integer: 2, version: 1}),\n                    /** Significant because integer changed */\n                    2: new mockModel.factory({integer: 3, version: 2}),\n                    /** Not a significant change */\n                    3: new mockModel.factory({integer: 3, version: 3})\n                };\n                var changeSummary = new ap.ChangeSummary(changes);\n\n                expect(changeSummary.significantVersionCount).toEqual(2);\n            });\n        });\n\n\n    });\n\n    function resetFieldVersionCollection() {\n        integerFieldVersionCollection = new ap.FieldVersionCollection(integerFieldDefinition);\n    }\n\n}\n"],"sourceRoot":"/source/"}