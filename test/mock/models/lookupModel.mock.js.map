{"version":3,"sources":["mock/models/lookupModel.mock.ts"],"names":[],"mappings":"AAAA,8CAA8C;;;;;;AAE9C,IAAO,EAAE,CA+DR;AA/DD,WAAO,EAAE;IAAC,IAAA,IAAI,CA+Db;IA/DS,WAAA,IAAI,EAAC,CAAC;QACZ,YAAY,CAAC;QAEb;YAAgC,8BAAuB;YACnD,oBAAY,GAAG;gBACX,iBAAO,CAAC;gBACR,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACxB,CAAC;YACL,iBAAC;QAAD,CALA,AAKC,CAL+B,EAAE,CAAC,QAAQ,GAK1C;QALY,eAAU,aAKtB,CAAA;QAED;YAAqC,mCAAQ;YACzC,yBAAoB,eAAe,EAAU,cAAc;gBAEvD,gFAAgF;gBAEhF;oHACoG;gBACpG,kBAAM;oBACF,OAAO,EAAE,UAAU;oBACnB,IAAI,EAAE;wBACF,KAAK,EAAE,gBAAgB;wBACvB,IAAI,EAAE,wCAAwC;wBAC9C,YAAY,EAAE;4BACV,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;yBACpF;qBACJ;iBACJ,CAAC,CAAC;gBAfa,oBAAe,GAAf,eAAe,CAAA;gBAAU,mBAAc,GAAd,cAAc,CAAA;gBAiBvD,IAAI,KAAK,GAAG,IAAI,CAAC;gBAEjB,qFAAqF;gBAErF;;;;mBAIG;gBACH,KAAK,CAAC,aAAa,CAAC;oBAChB,IAAI,EAAE,SAAS;oBACf,UAAU,EAAE,mBAAmB;oBAC/B,KAAK,EAAE,EAAE;wBACT,SAAS;wBACT,cAAc;wBACd,+CAA+C;wBAC/C,eAAe;wBACf,UAAU;iBACb,CAAC,CAAC;YAGP,CAAC;YACD,qCAAW,GAAX;gBACI,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAC5C,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,2BAA2B,EAAE;oBACnH,MAAM,EAAE,YAAY;iBACvB,CAAC,CAAC;gBACH,MAAM,CAAC,YAAY,CAAC;YACxB,CAAC;YACL,sBAAC;QAAD,CAhDA,AAgDC,CAhDoC,EAAE,CAAC,KAAK,GAgD5C;QAhDY,oBAAe,kBAgD3B,CAAA;QAED,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC;aACzB,OAAO,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;IAErD,CAAC,EA/DS,IAAI,GAAJ,OAAI,KAAJ,OAAI,QA+Db;AAAD,CAAC,EA/DM,EAAE,KAAF,EAAE,QA+DR","file":"mock/models/lookupModel.mock.js","sourcesContent":["/// <reference path=\"../app.module.mock.ts\" />\r\n\r\nmodule ap.test {\r\n    'use strict';\r\n\r\n    export class MockLookup extends ap.ListItem<MockLookup>{\r\n        constructor(obj) {\r\n            super();\r\n            _.assign(this, obj);\r\n        }\r\n    }\r\n\r\n    export class MockLookupModel extends ap.Model {\r\n        constructor(private apDecodeService, private mockXMLService) {\r\n\r\n            /********************* Model Definition ***************************************/\r\n\r\n            /** Model Constructor\r\n             *  Also passes list to List constructor to build viewFields (XML definition of fields to return) */\r\n            super({\r\n                factory: MockLookup,\r\n                list: {\r\n                    title: 'MockLookupList', /**Maps to the offline XML file in dev folder (no spaces) */\r\n                    guid: '{D2448413-D9AE-4FE4-A499-1D8FE7201FDA}', /**List GUID can be found in list properties in SharePoint designer */\r\n                    customFields: [\r\n                        { staticName: \"Title\", objectType: \"Text\", mappedName: \"title\", readOnly: false }\r\n                    ]\r\n                }\r\n            });\r\n\r\n            var model = this;\r\n\r\n            /*********************************** Queries ***************************************/\r\n\r\n            /** Fetch data (pulls local xml if offline named model.list.title + '.xml')\r\n             *  Initially pulls all requested data.  Each subsequent call just pulls records that have been changed,\r\n             *  updates the model, and returns a reference to the updated data array\r\n             * @returns {Array} Requested list items\r\n             */\r\n            model.registerQuery({\r\n                name: 'primary',\r\n                offlineXML: '../MockLookup.xml',\r\n                query: '' +\r\n                '<Query>' +\r\n                '   <OrderBy>' +\r\n                '       <FieldRef Name=\"ID\" Ascending=\"TRUE\"/>' +\r\n                '   </OrderBy>' +\r\n                '</Query>'\r\n            });\r\n\r\n\r\n        }\r\n        importMocks() {\r\n            var primaryCache = this.getCache('primary');\r\n            primaryCache.clear();\r\n            this.apDecodeService.processListItems(this, this.getQuery('primary'), this.mockXMLService.lookupItemsSinceChangeToken, {\r\n                target: primaryCache\r\n            });\r\n            return primaryCache;\r\n        }\r\n    }\r\n\r\n    angular.module('angularPoint')\r\n        .service('mockLookupModel', MockLookupModel);\r\n\r\n} "],"sourceRoot":"/source/"}