{"version":3,"file":"http-provider.factory.js","sourceRoot":"","sources":["../../src/factories/http-provider.factory.ts"],"names":[],"mappings":";AACA,4BAA0B,oBAAoB,CAAC,CAAA;AAO/C;;;;;GAKG;AACH,iBAAiB,IAAU;IACvB,EAAE,CAAC,CAAC,CAAC,yBAAW,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1B,2BAA2B;QAC3B,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;IACxC,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,8BAA8B;QAC9B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AAnBO,eAAO,WAmBd","sourcesContent":["import {Http} from '@angular/http';\nimport {environment} from '../app/environment';\n\nexport {getHttp};\n\n// Conditionally allow importing of mock responses when working offline\ndeclare let require;\n\n/**\n * Allows us to intercept and return mock responses when working \n * offline.  When online we use the real Http service.\n * @param {Http} http The real Http service.\n * @returns {Http} Http Service\n */\nfunction getHttp(http: Http) {\n    if (!environment.production) {\n        // Offline so use mock http\n        return require('../e2e').mockHttp();\n    } else {\n        // Online so use standard http\n        return http;\n    }\n}\n"]}