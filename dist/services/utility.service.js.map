{"version":3,"file":"utility.service.js","sourceRoot":"","sources":["../../src/services/utility.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {IUserPermissionsObject} from '../constants';\nimport {isFunction, each, isObject, isString} from 'lodash';\n\n\n/**\n * @ngdoc service\n * @name angularPoint.apUtilityService\n * @description\n * Provides shared utility functionality across the application.\n *\n */\n\n\nexport {\n    convertEffectivePermMask,\n    dateWithinRange,\n    doubleDigit,\n    fromCamelCase,\n    isGuid,\n    registerChange,\n    resolvePermissions,\n    splitIndex,\n    stringifyXML,\n    yyyymmdd\n};\n\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:convertEffectivePermMask\n * @methodOf angularPoint.apUtilityService\n * @description\n * GetListItemsSinceToken operation returns the list element with an EffectivePermMask attribute which is the\n * name of the PermissionMask.  We then need to convert the name into an actual mask so this function contains\n * the known permission names with their masks.  If a provided mask name is found, the cooresponding mask\n * is returned.  Otherwise returns null.  [MSDN Source](http://msdn.microsoft.com/en-us/library/jj575178(v=office.12).aspx)\n * @param {string} permMaskName Permission mask name.\n * @returns {string|null} Return the mask for the name.\n */\nfunction convertEffectivePermMask(permMaskName: string): string {\n    var permissionMask = null;\n\n    var permissions = {\n        // General\n        EmptyMask: '0x0000000000000000',\n        FullMask: '0x7FFFFFFFFFFFFFFF',\n\n        // List and document permissions\n        ViewListItems: '0x0000000000000001',\n        AddListItems: '0x0000000000000002',\n        EditListItems: '0x0000000000000004',\n        DeleteListItems: '0x0000000000000008',\n        ApproveItems: '0x0000000000000010',\n        OpenItems: '0x0000000000000020',\n        ViewVersions: '0x0000000000000040',\n        DeleteVersions: '0x0000000000000080',\n        CancelCheckout: '0x0000000000000100',\n        ManagePersonalViews: '0x0000000000000200',\n        ManageLists: '0x0000000000000800',\n        ViewFormPages: '0x0000000000001000',\n\n        // Web level permissions\n        Open: '0x0000000000010000',\n        ViewPages: '0x0000000000020000',\n        AddAndCustomizePages: '0x0000000000040000',\n        ApplyThemeAndBorder: '0x0000000000080000',\n        ApplyStyleSheets: '0x0000000000100000',\n        ViewUsageData: '0x0000000000200000',\n        CreateSSCSite: '0x0000000000400000',\n        ManageSubwebs: '0x0000000000800000',\n        CreateGroups: '0x0000000001000000',\n        ManagePermissions: '0x0000000002000000',\n        BrowseDirectories: '0x0000000004000000',\n        BrowseUserInfo: '0x0000000008000000',\n        AddDelPrivateWebParts: '0x0000000010000000',\n        UpdatePersonalWebParts: '0x0000000020000000',\n        ManageWeb: '0x0000000040000000',\n        UseClientIntegration: '0x0000001000000000',\n        UseRemoteAPIs: '0x0000002000000000',\n        ManageAlerts: '0x0000004000000000',\n        CreateAlerts: '0x0000008000000000',\n        EditMyUserInfo: '0x0000010000000000',\n\n        // Special Permissions\n        EnumeratePermissions: '0x4000000000000000'\n    };\n\n    if (permissions[permMaskName]) {\n        permissionMask = permissions[permMaskName];\n    }\n    return permissionMask;\n}\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:dateWithinRange\n * @methodOf angularPoint.apUtilityService\n * @description\n * Converts dates into yyyymmdd formatted ints and evaluates to determine if the dateToCheck\n * falls within the date range provided\n * @param {Date} startDate Starting date.\n * @param {Date} endDate Ending date.\n * @param {Date} [dateToCheck=new Date()] Defaults to the current date.\n * @returns {boolean} Does the date fall within the range?\n */\nfunction dateWithinRange(startDate: Date, endDate: Date, dateToCheck = new Date()): boolean {\n    // Ensure both a start and end date are provided\n    if (!startDate || !endDate) {\n        return false;\n    }\n\n    /** Create an int representation of each of the dates */\n    var startInt = yyyymmdd(startDate);\n    var endInt = yyyymmdd(endDate);\n    var dateToCheckInt = yyyymmdd(dateToCheck);\n\n    return startInt <= dateToCheckInt && dateToCheckInt <= endInt;\n}\n\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:doubleDigit\n * @methodOf angularPoint.apUtilityService\n * @description Add a leading zero if a number/string only contains a single character.  So in the case\n * where the number 9 is passed in the string '09' is returned.\n * @param {(number|string)} val A number or string to evaluate.\n * @returns {string} Two digit string.\n */\nfunction doubleDigit(val: number | string): string {\n    if (typeof val === 'number') {\n        return val > 9 ? val.toString() : '0' + val;\n    } else if (typeof val === 'string') {\n        return doubleDigit(parseInt(val, 10));\n    }\n}\n\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:fromCamelCase\n * @methodOf angularPoint.apUtilityService\n * @param {string} str String to convert.\n * @description\n * Converts a camel case string into a space delimited string with each word having a capitalized first letter.\n * @returns {string} Humanized string.\n */\nfunction fromCamelCase(str): string {\n    // insert a space before all caps\n    return str.replace(/([A-Z])/g, ' $1')\n        // uppercase the first character\n        .replace(/^./, function(str) {\n            return str.toUpperCase();\n        });\n}\n\nfunction isGuid(value) {\n    return (typeof value === 'string') && /[a-fA-F\\d]{8}-(?:[a-fA-F\\d]{4}-){3}[a-fA-F\\d]{12}/\n        .test(value);\n}\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:registerChange\n * @methodOf angularPoint.apUtilityService\n * @description\n * If online and sync is being used, notify all online users that a change has been made.\n * //Todo Break this functionality into FireBase module that can be used if desired.\n * @param {object} model event\n */\nfunction registerChange(model, changeType: string, listItemId: number) {\n    /** Disabled this functionality until I can spend the necessary time to test */\n    if (model.sync && isFunction(model.sync.registerChange)) {\n        /** Register change after successful update */\n        model.sync.registerChange(changeType, listItemId);\n    }\n}\n\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:resolvePermissions\n * @methodOf angularPoint.apUtilityService\n * @param {string} permissionsMask The WSS Rights Mask is an 8-byte, unsigned integer that specifies\n * the rights that can be assigned to a user or site group. This bit mask can have zero or more flags set.\n * @description\n * Converts permMask into something usable to determine permission level for current user.  Typically used\n * directly from a list item.  See ListItem.resolvePermissions.\n *\n * <h3>Additional Info</h3>\n *\n * -   [PermMask in SharePoint DVWPs](http://sympmarc.com/2009/02/03/permmask-in-sharepoint-dvwps/)\n * -   [$().SPServices.SPLookupAddNew and security trimming](http://spservices.codeplex.com/discussions/208708)\n *\n * @returns {object} Object with properties for each permission level identifying if current user has rights (true || false)\n * @example\n * <pre>\n * var perm = apUtilityService.resolvePermissions('0x0000000000000010');\n * </pre>\n * Example of what the returned object would look like\n * for a site admin.\n * <pre>\n * perm = {\n *    \"ViewListItems\":true,\n *    \"AddListItems\":true,\n *    \"EditListItems\":true,\n *    \"DeleteListItems\":true,\n *    \"ApproveItems\":true,\n *    \"OpenItems\":true,\n *    \"ViewVersions\":true,\n *    \"DeleteVersions\":true,\n *    \"CancelCheckout\":true,\n *    \"PersonalViews\":true,\n *    \"ManageLists\":true,\n *    \"ViewFormPages\":true,\n *    \"Open\":true,\n *    \"ViewPages\":true,\n *    \"AddAndCustomizePages\":true,\n *    \"ApplyThemeAndBorder\":true,\n *    \"ApplyStyleSheets\":true,\n *    \"ViewUsageData\":true,\n *    \"CreateSSCSite\":true,\n *    \"ManageSubwebs\":true,\n *    \"CreateGroups\":true,\n *    \"ManagePermissions\":true,\n *    \"BrowseDirectories\":true,\n *    \"BrowseUserInfo\":true,\n *    \"AddDelPrivateWebParts\":true,\n *    \"UpdatePersonalWebParts\":true,\n *    \"ManageWeb\":true,\n *    \"UseRemoteAPIs\":true,\n *    \"ManageAlerts\":true,\n *    \"CreateAlerts\":true,\n *    \"EditMyUserInfo\":true,\n *    \"EnumeratePermissions\":true,\n *    \"FullMask\":true\n * }\n * </pre>\n */\nfunction resolvePermissions(permissionsMask): IUserPermissionsObject {\n    var permissionSet = {\n        ViewListItems: (1 & permissionsMask) > 0,\n        AddListItems: (2 & permissionsMask) > 0,\n        EditListItems: (4 & permissionsMask) > 0,\n        DeleteListItems: (8 & permissionsMask) > 0,\n        ApproveItems: (16 & permissionsMask) > 0,\n        OpenItems: (32 & permissionsMask) > 0,\n        ViewVersions: (64 & permissionsMask) > 0,\n        DeleteVersions: (128 & permissionsMask) > 0,\n        CancelCheckout: (256 & permissionsMask) > 0,\n        PersonalViews: (512 & permissionsMask) > 0,\n\n        ManageLists: (2048 & permissionsMask) > 0,\n        ViewFormPages: (4096 & permissionsMask) > 0,\n\n        Open: (65536 & permissionsMask) > 0,\n        ViewPages: (131072 & permissionsMask) > 0,\n        AddAndCustomizePages: (262144 & permissionsMask) > 0,\n        ApplyThemeAndBorder: (524288 & permissionsMask) > 0,\n        ApplyStyleSheets: (1048576 & permissionsMask) > 0,\n        ViewUsageData: (2097152 & permissionsMask) > 0,\n        CreateSSCSite: (4194314 & permissionsMask) > 0,\n        ManageSubwebs: (8388608 & permissionsMask) > 0,\n        CreateGroups: (16777216 & permissionsMask) > 0,\n        ManagePermissions: (33554432 * permissionsMask) > 0,\n        BrowseDirectories: (67108864 & permissionsMask) > 0,\n        BrowseUserInfo: (134217728 & permissionsMask) > 0,\n        AddDelPrivateWebParts: (268435456 & permissionsMask) > 0,\n        UpdatePersonalWebParts: (536870912 & permissionsMask) > 0,\n        ManageWeb: (1073741824 & permissionsMask) > 0,\n        UseRemoteAPIs: (137438953472 & permissionsMask) > 0,\n        ManageAlerts: (274877906944 & permissionsMask) > 0,\n        CreateAlerts: (549755813888 & permissionsMask) > 0,\n        EditMyUserInfo: (1099511627776 & permissionsMask) > 0,\n        EnumeratePermissions: (4611686018427387904 & permissionsMask) > 0,\n        FullMask: (9223372036854775807 == permissionsMask)\n    };\n\n    /**\n     * Full Mask only resolves correctly for the Full Mask level\n     * so in that case, set everything to true\n     */\n    if (permissionSet.FullMask) {\n        each(permissionSet, function(perm, key) {\n            permissionSet[key] = true;\n        });\n    }\n\n    return permissionSet;\n}\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:splitIndex\n * @methodOf angularPoint.apUtilityService\n * @description Split values like 1;#value into id and value.\n * @param {string} str Lookup string from SharePoint.\n * @returns {Lookup} Object with lookupValue and lookupId.\n */\nfunction splitIndex(str: string): { id: number; value: string } {\n    var spl = str.split(';#');\n    let id = parseInt(spl[0], 10);\n    let value = spl[1];\n    return { id, value };\n}\n\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:stringifyXML\n * @methodOf angularPoint.apUtilityService\n * @description Simple utility to convert an XML object into a string and remove unnecessary whitespace.\n * @param {object} xml XML object.\n * @returns {string} Stringified version of the XML object.\n */\nfunction stringifyXML(xml: Element): string {\n    var str;\n\n    if (isObject(xml)) {\n        str = xmlToString(xml).replace(/\\s+/g, ' ');\n    } else if (isString(xml)) {\n        str = xml;\n    }\n    return str;\n}\n\n\n// function toCamelCase(str): string {\n//     return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(letter, index) {\n//         return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\n//     }).replace(/\\s+/g, '');\n// }\n\n\n/**\n * @ngdoc function\n * @name angularPoint.apUtilityService:yyyymmdd\n * @methodOf angularPoint.apUtilityService\n * @description\n * Convert date into a int formatted as yyyymmdd\n * We don't need the time portion of comparison so an int makes this easier to evaluate\n */\nfunction yyyymmdd(date: Date): number {\n    var yyyy = date.getFullYear();\n    var mm = date.getMonth() + 1;\n    var dd = date.getDate();\n    /** Add leading 0's to month and day if necessary */\n    return parseInt(yyyy + doubleDigit(mm) + doubleDigit(dd), 10);\n}\n\nfunction xmlToString(xmlData) {\n    var xmlString;\n    if (typeof XMLSerializer !== 'undefined') {\n        /** Modern Browsers */\n        xmlString = (new XMLSerializer()).serializeToString(xmlData);\n    } else {\n        /** Old versions of IE */\n        xmlString = xmlData.xml;\n    }\n    return xmlString;\n}\n\n\n\n\n"]}